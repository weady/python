#!/usr/bin/python
#coding:utf8

#	by wangdd 2016/11/07
#这个文件主要记录学习pythoncookbook书时的学习笔记

#--------------------第一章----------------------------------
#--------------------第二章----------------------------------
#--------------------第三章----------------------------------
#--------------------第四章----------------------------------
#--------------------第五章----------------------------------
#--------------------第六章----------------------------------
#--------------------第七章----------------------------------
#--------------------第八章----------------------------------
#--------------------第九章----------------------------------
#--------------------第十章----------------------------------
#--------------------第十一章----------------------------------
#--------------------第十二章 并发编程----------------------------------
'''
Python解释器直到所有线程都终止前仍保持运行
对于需要长时间运行的线程或者需要一直运行的后台任务你应当考虑使用后台线程
由于全局解释锁（GIL）的原因，Python 的线程被限制到同一时刻只允许一个线程执行这样一个执行模型
所以，Python 的线程更适用于处理I/O和其他需要并发执行的阻塞操作（比如等待I/O、等待从数据库获取数据等等
而不是需要多处理器并行的计算密集型任务
'''
from threading import Thread
t = Thread(target=countdown, args=(10,))
t.start() #启动线程
if t.is_alive(): #查看一个线程的状态
    print('Still running')
else:
        print('Completed')
t = Thread(target=countdown, args=(10,), daemon=True) #设定守护线程
t.start()
